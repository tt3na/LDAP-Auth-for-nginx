
ERROR_HOLDER(){
	echo "Content-type: text/html; charset=UTF-8"
	echo ""
	echo "error"
	rm -rf $tmp-*
	exit 1	
}

trap ERROR_HOLDER ERR
+ trap ERROR_HOLDER ERR
set -o pipefail
+ set -o pipefail

if [ -n "$CONTENT_LENGTH" ];then
	dd bs=$CONTENT_LENGTH	|
	sed 's/&/\n/g'		| 
	sed 's/=/ /g'	> $tmp-name
else
	: > $tmp-name
fi
+ '[' -n 15 ']'
+ dd bs=15
+ sed 's/&/\n/g'
+ sed 's/=/ /g'
1+0 records in
1+0 records out
15 bytes (15 B) copied, 0.000297347 s, 50.4 kB/s

if [ -n "$QUERY_STRING" ];then
	echo "$QUERY_STRING"	|
	sed 's/&/\n/g' 		| 
	sed 's/=/ /g'   > $tmp-get
else
	: > $tmp-get
fi
+ '[' -n '' ']'
+ :

user=$(awk '$1=="USER"{print $2}' $tmp-name)
++ awk '$1=="USER"{print $2}' /tmp/tmp_37-name
+ user=

# パスワードを扱うのでログの記録停止
set +vx
+ set +vx
Issue LDAP Who am I? operation to request user's authzid

usage: ldapwhoami [options]
Common options:
  -d level   set LDAP debugging level to `level'
  -D binddn  bind DN
  -e [!]<ext>[=<extparam>] general extensions (! indicates criticality)
             [!]assert=<filter>     (RFC 4528; a RFC 4515 Filter string)
             [!]authzid=<authzid>   (RFC 4370; "dn:<dn>" or "u:<user>")
             [!]chaining[=<resolveBehavior>[/<continuationBehavior>]]
                     one of "chainingPreferred", "chainingRequired",
                     "referralsPreferred", "referralsRequired"
             [!]manageDSAit         (RFC 3296)
             [!]noop
             ppolicy
             [!]postread[=<attrs>]  (RFC 4527; comma-separated attr list)
             [!]preread[=<attrs>]   (RFC 4527; comma-separated attr list)
             [!]relax
             [!]sessiontracking
             abandon, cancel, ignore (SIGINT sends abandon/cancel,
             or ignores response; if critical, doesn't wait for SIGINT.
             not really controls)
  -h host    LDAP server
  -H URI     LDAP Uniform Resource Identifier(s)
  -I         use SASL Interactive mode
  -n         show what would be done but don't actually do it
  -N         do not use reverse DNS to canonicalize SASL host name
  -O props   SASL security properties
  -o <opt>[=<optparam>] general options
             nettimeout=<timeout> (in seconds, or "none" or "max")
             ldif-wrap=<width> (in columns, or "no" for no wrapping)
  -p port    port on LDAP server
  -Q         use SASL Quiet mode
  -R realm   SASL realm
  -U authcid SASL authentication identity
  -v         run in verbose mode (diagnostics to standard output)
  -V         print version info (-VV only)
  -w passwd  bind password (for simple authentication)
  -W         prompt for bind password
  -x         Simple authentication
  -X authzid SASL authorization identity ("dn:<dn>" or "u:<user>")
  -y file    Read password from file
  -Y mech    SASL mechanism
  -Z         Start TLS request (-ZZ to require successful response)
trap ERROR_HOLDER ERR
+ trap ERROR_HOLDER ERR

if [ $code -eq 0 ];then
	sesid=$(echo $todayhms$user | md5sum | awk '{print $1}')
	cat <<- FIN > $sesd/SESSION.$sesid
	sessionid $sesid
	user $user
	login $todayhms
	FIN
	echo "Content-type: text/html"
	echo "Set-Cookie: sessionId=$sesid; path=/; expires=$(LANG=en_US;date +"%a, %d %b %Y 14:59:59 GMT")"
	echo ""
	cat <<- FIN
	<!DOCTYPE html>
	<html>
		<head>
		</head>
		<body onload="location.href='$REDIRECT'"></body>
	</html>
	FIN
else
	echo "Content-type: text/html"
	echo ""
	cat <<- FIN
	<!DOCTYPE html>
	<html>
		<head>
		</head>
		<body onload="location.href='/login'"></body>
	</html>
	FIN
fi
+ '[' 1 -eq 0 ']'
+ echo 'Content-type: text/html'
+ echo ''
+ cat

rm -rf $tmp-*
+ rm -rf /tmp/tmp_37-get /tmp/tmp_37-name
exit 0
+ exit 0
